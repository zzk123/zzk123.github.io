(window.webpackJsonp=window.webpackJsonp||[]).push([[53],{830:function(t,a,s){"use strict";s.r(a);var n=s(115),e=Object(n.a)({},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#概述","aria-hidden":"true"}},[t._v("#")]),t._v(" 概述")]),t._v(" "),s("blockquote",[s("p",[t._v("讨论方法设计的几个方面：如何处理参数和返回值，如何设计方法签名，如何为方法编写文档")])]),t._v(" "),s("h2",{attrs:{id:"第三十八条：检查参数的有效性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第三十八条：检查参数的有效性","aria-hidden":"true"}},[t._v("#")]),t._v(" 第三十八条：检查参数的有效性")]),t._v(" "),s("h2",{attrs:{id:"第三十九条：必要时进行保护性拷贝"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第三十九条：必要时进行保护性拷贝","aria-hidden":"true"}},[t._v("#")]),t._v(" 第三十九条：必要时进行保护性拷贝")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("public final class Period"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    private final Date start"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    private final Date end"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    public Period"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Date start, Date end"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        if"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("start.compareTo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("end"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            throw new IllegalArgumentException"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("start + "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('" after "')]),t._v(" + end"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        this.start "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" start"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        this.end "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" end"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    public Date start"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" start"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    public Date end"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" end"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("上面这个类可能是不变的，并且加了约束条件：时间start不能大于时间end，然而因为Date类本身是可变，因此容易违反这个约束条件，如下")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("Date start "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" new Date"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nDate end "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" new Date"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nPeriod p "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" new Period"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("start, end"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nend.setYear"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("78"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("所以为了保护Period的内部信息避免受到破坏，对于构造器的每个可变参数进行保护性拷贝（defensive copy）是必要的，使用备份对象作为Period的组件，而不是使用原始的对象，如下")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("public Period"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Date start, Date end"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        this.start "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" new Date"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("start.getTime"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("))")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        this.end "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" new Date"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("end.getTime"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("))")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        if"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("start.compareTo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("end"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            throw new IllegalArgumentException"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("start + "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('" after "')]),t._v(" + end"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n")])])]),s("p",[t._v("总之，如果类具有从客户端得到或者返回到客户端的可变组件，类就必须保护性地拷贝这些组件，如果拷贝成本受到限制，并且类信任它的客户端不会不恰当的修改组件，就可以在文档中指明客户端的职责是不得修改受到影响的组件，以此来代替保护性拷贝")]),t._v(" "),s("h2",{attrs:{id:"第四十条：谨慎设计方法签名"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第四十条：谨慎设计方法签名","aria-hidden":"true"}},[t._v("#")]),t._v(" 第四十条：谨慎设计方法签名")]),t._v(" "),s("blockquote",[s("ol",[s("li",[t._v("谨慎地选择方法的名称，方法的名称应该始终遵循标准的命名习惯")]),t._v(" "),s("li",[t._v("不要过于追求提供便利的方法。每个方法都应该尽其所能，方法太多会使类难以学习，使用，文档化，测试和维护")]),t._v(" "),s("li",[t._v("避免过长的参数列表。目标是四个参数，或者更少")])])]),t._v(" "),s("h2",{attrs:{id:"第四十一条：慎用重载"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第四十一条：慎用重载","aria-hidden":"true"}},[t._v("#")]),t._v(" 第四十一条：慎用重载")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("public class CollectionClassfier"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    public static String classifty"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Set"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("?"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Set"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    public static String classifty"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("List"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("?"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" lst"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"List"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    public static String classifty"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Collection"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("?"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Unknown Collection"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    public static void main"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("String"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        Collection"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("?"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" collections "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            new HashSet"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("String"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(",\n            new ArrayList"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("BigInteger"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(",\n            new HashMap"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("String, String"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(".values"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        for"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Collection"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("?"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" c "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v(":")]),t._v(" collections"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            System.out.println"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("classify"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("))")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v('期望结果是打印出"Set","List"以及"Unknown Collection"，但实际上是打印"Unknown Collection"三次，因为classify方法被重载了，而要调用哪个重载（overloading）方法是在编译时做出决定的，对于for循环中的全部三次迭代，参数的编译时类型都是相同的：Collection<?>。每次迭代的运行时类型都是不同的，但这并不影戏对重载方法的选择，因为该参数的编译时类型为Collection<?>，所以，唯一合适的重载方法是第三个：classifty(Collection<?> c)，在循环的每次迭代中，都会调用这个重载方法')])]),t._v(" "),s("h2",{attrs:{id:"第四十二条：慎用可变-参数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第四十二条：慎用可变-参数","aria-hidden":"true"}},[t._v("#")]),t._v(" 第四十二条：慎用可变 参数")]),t._v(" "),s("h2",{attrs:{id:"第四十三条：返回零长度的数据或者集合，而不是null"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第四十三条：返回零长度的数据或者集合，而不是null","aria-hidden":"true"}},[t._v("#")]),t._v(" 第四十三条：返回零长度的数据或者集合，而不是null")]),t._v(" "),s("h2",{attrs:{id:"第四十四条：为所有导出的api元素编写文档注释"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第四十四条：为所有导出的api元素编写文档注释","aria-hidden":"true"}},[t._v("#")]),t._v(" 第四十四条：为所有导出的API元素编写文档注释")])])},[],!1,null,null,null);a.default=e.exports}}]);