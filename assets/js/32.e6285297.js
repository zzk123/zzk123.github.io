(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{863:function(t,a,s){"use strict";s.r(a);var n=s(115),e=Object(n.a)({},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#概述","aria-hidden":"true"}},[t._v("#")]),t._v(" 概述")]),t._v(" "),s("blockquote",[s("p",[t._v("代理模式是一种应用很广泛的结构型设计模式，而且变化很多。在代理模式中引入了一个新的代理对象，代理对象可以在客户端对象和目标对象之间起到中介作用，去掉客户不能看到的内容和服务或者增添客户需要的额外服务。")])]),t._v(" "),s("h2",{attrs:{id:"定义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#定义","aria-hidden":"true"}},[t._v("#")]),t._v(" 定义")]),t._v(" "),s("blockquote",[s("p",[t._v("代理模式(Proxy Pattern):给某一个对象提供一个代理，并由代理对象控制对原对象的引用。代理模式是一种对象结构型模式。")])]),t._v(" "),s("h2",{attrs:{id:"结构图"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#结构图","aria-hidden":"true"}},[t._v("#")]),t._v(" 结构图")]),t._v(" "),s("p",[s("a",{attrs:{"data-fancybox":"",title:"结构图",href:"/pic/design/MGXS4xg.png"}},[s("img",{attrs:{src:"/pic/design/MGXS4xg.png",alt:"结构图"}})])]),t._v(" "),s("p",[t._v("代理模式的结构比较简单，其核心是代理类，为了让客户端能够一致地对待真实对象和代理对象，在代理模式中引入抽象模式，结构如上图")]),t._v(" "),s("p",[t._v("由结构图可以看出")]),t._v(" "),s("ol",[s("li",[s("p",[s("strong",[t._v("Subject(抽象主题角色)")]),t._v(":它声明了真实主题和代理主题的共同接口，使得在任何使用真实主题的地方都可以使用代理主题，客户端通常需要针对抽象主题角色进行编程")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("Proxy(代理主题角色)")]),t._v(":代理主题角色内部包含了对真实主题的引用，从而可以在任何时候操作真实主题对象；在代理主题角色中提供了一个与真实主题角色相同的接口，以便在任何时候都可以代替真实主题对象；代理主题角色还可以控制对真实主题的使用，负责在需要的时候创建和删除真实主题对象，并对真实主题对象的使用加以约束。通常，在代理主题角色中，客户端在调用所引用的真实主题操作之前或者之后还需要执行其他操作，而不仅仅是单纯调用真实主题对象中的操作。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("RealSubject(真实主题角色)")]),t._v(":它定义了代理角色所代表的真实对象，在真实主题角色中实现了真实的业务操作，客户端可以通过代理主题角色间接调用真实主题角色中定义的操作。")])])]),t._v(" "),s("h2",{attrs:{id:"典型代码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#典型代码","aria-hidden":"true"}},[t._v("#")]),t._v(" 典型代码")]),t._v(" "),s("p",[t._v("最简单的代理类实现代码如下:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("\tclass Proxy implements Subject"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\n\t\tprivate RealSubject realSubject "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" new RealSubject"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t//维持一个对真实主题对象的引用\n\n\t\tpublic void preRequest"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\t\tpublic void request"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tpreRequest"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\trealSubject.request"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t//调用真实主题对象的方法\n\t\t\tpostRequest"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\t\tpublic void postRequest"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"代理模式种类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#代理模式种类","aria-hidden":"true"}},[t._v("#")]),t._v(" 代理模式种类")]),t._v(" "),s("p",[t._v("在实际开发中，代理类的实现要复杂很多。代理模式根据其目的和实现方式不同可分成很多种类，其中常用的几种代理模式如下：")]),t._v(" "),s("ol",[s("li",[s("p",[s("strong",[t._v("远程代理（Remote Proxy）")]),t._v(":为一个位于不同的地址空间的对象提供一个本地的代理对象，这个不同的地址空间可以在同一台主机中，也可以在另一台主机中。远程代理又称为大使(Ambassador)")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("虚拟代码（Virtual Proxy）")]),t._v(":如果需要创建一个资源消耗较大的对象，先创建一个消耗相对较小的对象来表示，真实的对象只在被需要时才会被真正创建")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("保护代理(Protect Proxy)")]),t._v("：控制对一个对象的访问，可以给不同的用户提供不同级别的使用权限")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("缓冲代理(Cache Proxy)")]),t._v(":为某一个目标操作的结果提供临时的存储空间，以便多个客户端可以共享这些结果")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("智能引用代理(Smart Reference Proxy)")]),t._v("：当一个对象被引用时，提供一些额外操作，例如将对象被调用的次数记录下俩等")])])]),t._v(" "),s("h2",{attrs:{id:"扩展"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#扩展","aria-hidden":"true"}},[t._v("#")]),t._v(" 扩展")]),t._v(" "),s("p",[t._v("代理模式和装饰模式在实现时有些类似，但是代理模式主要是给真实主题类增加一些全新的职责，例如权限控制，缓冲处理，智能引用，远程访问等，这些职责与原有职责不属于同一问题域；而装饰模式是通过装饰类为具体构件类增加一些相关的职责，是对原有职责的扩展，这些职责属于同一问题域。代理模式和装饰模式的目的也不相同，前者是控制对对象的访问，而后者是为对象动态地增加功能")]),t._v(" "),s("h2",{attrs:{id:"实例：商务信息的身份验证和日志记录"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实例：商务信息的身份验证和日志记录","aria-hidden":"true"}},[t._v("#")]),t._v(" 实例：商务信息的身份验证和日志记录")]),t._v(" "),s("p",[t._v("使用代理模式设计商务信息查询系统的身份验证和日志记录")]),t._v(" "),s("h3",{attrs:{id:"结构图-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#结构图-2","aria-hidden":"true"}},[t._v("#")]),t._v(" 结构图")]),t._v(" "),s("p",[s("a",{attrs:{"data-fancybox":"",title:"结构图",href:"/pic/design/wbOioMd.png"}},[s("img",{attrs:{src:"/pic/design/wbOioMd.png",alt:"结构图"}})])]),t._v(" "),s("p",[t._v("业务类AccessValidator用于验证用户身份，它提供方法validate()来实现身份验证；业务类Logger用于记录用户查询日志，它提供方法log()来保存日志；RealSearcher充当真实主题角色，实现查询功能，它提供方法doSearch()来查询信息；ProxySearcher充当代理主题角色，它是查询代理，维持了对RealSearcher对象，AccessValidator对象和Logger对象的引用；Searcher充当抽象主题角色，声明了doSearch()方法。")]),t._v(" "),s("h3",{attrs:{id:"代码实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#代码实现","aria-hidden":"true"}},[t._v("#")]),t._v(" 代码实现")]),t._v(" "),s("p",[s("strong",[t._v("抽象查询类：抽象主题类")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("\tpublic interface Searcher "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tpublic String doSearch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("String userId, String keyword"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("strong",[t._v("身份验证类：业务类")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("\tpublic class AccessValidator "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t//模拟实现登录验证\n\t\tpublic boolean validate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("String userId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tSystem.out.println"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"在数据库中验证用户"')]),t._v("+ userId + "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"是否是合法用户?"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\tif"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("userId.equalsIgnoreCase"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"杨过"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("))")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\tSystem.out.println"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("userId + "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"登录成功！"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("else "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\tSystem.out.println"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("userId + "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"登录失败！"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("strong",[t._v("日志记录类：业务员类")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("\tpublic class Logger "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t//模拟实现日志记录\n\t\tpublic void log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("String userId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tSystem.out.println"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"更新数据库，用户"')]),t._v("+ userId + "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"查询次数加1！"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("strong",[t._v("具体查询类：真实主题类")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("\tpublic class RealSearcher implements Searcher "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t//模拟查询商务信息\n\t\tpublic String doSearch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("String userId, String keyword"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tSystem.out.println"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"用户"')]),t._v(" + userId + "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"使用关键词"')]),t._v(" + keyword + "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"查询商务信息!"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"返回具体内容"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("strong",[t._v("代理查询类：代理主题类")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("\tpublic class ProxySearcher implements Searcher "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\n\t\t//维持一个对真实主题的引用\n\t\tprivate RealSearcher searcher "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" new RealSearcher"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\n\t\tprivate AccessValidator validator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\n\t\tprivate Logger logger"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\n\t\t@Override\n\t\tpublic String doSearch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("String userId, String keyword"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t//如果身份验证成功，则执行查询\n\t\t\tif"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("validate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("userId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("))")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t//调用真实主题对象的查询方法\n\t\t\t\tString result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" searcher.doSearch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("userId, keyword"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n\t\t\t\t//记录查询日志\n\t\t\t\tthis.log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("userId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\t//返回查询结果\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" result"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("else "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" null"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\t\t//创建访问验证对象并调用其validate（）方法实现身份验证\n\t\tpublic boolean validate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("String userId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tvalidator "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" new AccessValidator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" validator.validate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("userId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t\n\t\t//创建日志记录对象并调用log（）方法实现日志记录\n\t\tpublic void log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("String userId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tlogger "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" new Logger"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\tlogger.log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("userId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("strong",[t._v("工具类XMLUtil：用来读取配置文件来反射生成对象")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("\tpublic class XMLUtil "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tpublic static Object getBean"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\ttry "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t//创建文档对象\n\t\t\t\tDocumentBuilderFactory dFactory "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" DocumentBuilderFactory.newInstance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\tDocumentBuilder builder "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" dFactory.newDocumentBuilder"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\tDocument doc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\tdoc "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" builder.parse"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("new File"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"config.xml"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("))")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\t\n\t\t\t\t//获取包含类名的文本节点\n\t\t\t\tNodeList "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("nl")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" doc.getElementsByTagName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"className"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\tNode classNode "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" nl.item"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(".getFirstChild"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\tString cName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" classNode.getNodeName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\t\n\t\t\t\t//通过类名生成实例对象并将其返回\n\t\t\t\tClass c "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Class.forName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\tObject obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" c.newInstance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("catch "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Exception e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\te.printStackTrace"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" null"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("strong",[t._v("配置文件存储了代理主题类的类名")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("\t"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("?xml version"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1.0"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("config"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("className"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("ProxySearcher"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("/className"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("/config"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("p",[s("strong",[t._v("客户端测试")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("\tpublic class Client "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\n\t\tpublic static void main"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("String"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t//针对抽象编程，客户端无需分辨真实主题类和代理类\n\t\t\tSearcher searcher"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\tsearcher "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Searcher"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("XMLUtil.getBean"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\tString result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" searcher.doSearch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"杨过"')]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"小龙女"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("本实例是保护代理和智能引用代理的应用实例，在代理类ProxySearcher中实现对真实主题类的权限控制和引用计数，如果需要在访问真实主题时增加新的访问控制机制和新功能，只需增加一个新的代理类，再修改配置文件，在客户端代码中使用新增代理类即可，源代码无须修改，符合开闭原则")]),t._v(" "),s("h2",{attrs:{id:"java动态代理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#java动态代理","aria-hidden":"true"}},[t._v("#")]),t._v(" java动态代理")]),t._v(" "),s("p",[t._v("通常情况下，每一个代理类编译之后都会生成一个class文件，代理类所实现的接口和所代理的方法都被固定，这种代理被称之为静态代理（Static Proxy），还有一种机制能够让系统在运行时动态创建代理类，叫做动态代理(Dynamic Proxy)，动态代理是一种较为高级的代理模式，它在事务管理，AOP(Aspect-Oriented Programming,面向方面编程)等领域都发挥了重要的作用。")]),t._v(" "),s("p",[t._v("Java语言实现动态代理时需要用到位于java.lang.reflect包中的一些类，如下")]),t._v(" "),s("p",[s("strong",[t._v("1. Proxy类")])]),t._v(" "),s("p",[t._v("Proxy类提供给了用于创建动态代理类和实例对象的方法，它是所创建的动态代理类的父类，最常用的方法如下：")]),t._v(" "),s("p",[s("strong",[t._v("(1) public static Class<?> getProxyClass(ClassLoader loader, Class<?>...interfaces)")]),t._v(".该方法用于返回一个Class类型的代理类，在参数中需要提供类加载器并需要指定代理的接口数组（与真实主题类的接口列表一致）")]),t._v(" "),s("p",[s("strong",[t._v("(2) public static Object newProxyInstance(ClassLoader loader, Class<?>[] interfaces, InvocationHandler h)")]),t._v(" 该方法用于返回一个动态创建的代理类的实例，方法中的第1个参数loader表示代理类的类加载器，第2个参数interfaces表示代理类所实现的接口列表(与真实主题类的接口列表一致)，第3个参数h表示所指派的调用处理程序类")]),t._v(" "),s("p",[s("strong",[t._v("2. InvocationHandler接口")])]),t._v(" "),s("p",[t._v("InvocationHandler接口是代理处理程序类的实现接口，该接口作为代理实例的调用处理者的公共父类，每一个代理类的实例都可以提供一个相关的具体调用处理者(InvocationHandler接口的子类)。该接口中声明了如下方法：")]),t._v(" "),s("p",[s("strong",[t._v("public Object invoke(Object proxy, Method method, Object[] args).")]),t._v(" 该方法用于处理对代理类实例的方法调用并返回相应的结果，当一个代理实例中的业务方法被调用时将自动调用该方法。invoke()方法包含3个参数，其中，第1个参数proxy表示代理类的实例，第2个参数method表示需要代理的方法，第3个参数args表示代理方法的参数数组")]),t._v(" "),s("p",[t._v("动态代理类需要在运行时指定所代理真实主题类的接口，客户端在调用动态代理对象的方法时，调用请求会将请求自动转发给InvocationHandler对象的invoke()方法，由invoke()方法来实现对请求的统一处理")]),t._v(" "),s("h2",{attrs:{id:"例子"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#例子","aria-hidden":"true"}},[t._v("#")]),t._v(" 例子")]),t._v(" "),s("p",[t._v("使用动态代理进行设计与实现调用日志，用于记录数据访问层DAO每一个方法被调用的时间和调用的结果")]),t._v(" "),s("h3",{attrs:{id:"代码实现-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#代码实现-2","aria-hidden":"true"}},[t._v("#")]),t._v(" 代码实现")]),t._v(" "),s("p",[s("strong",[t._v("抽象UserDAO：抽象主题角色")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("\tpublic interface AbstractUserDAO "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tpublic Boolean findUserById"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("String userId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("strong",[t._v("抽象DocumentDAO：抽象主题角色")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("\tpublic interface AbstractDocumentDAO "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tpublic Boolean deleteDocumentById"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("String documentId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("strong",[t._v("具体UserDAO类：真实角色")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("\tpublic class UserDAO implements AbstractUserDAO "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\n\t\tpublic Boolean findUserById"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("String userId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tif"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("userId.equalsIgnoreCase"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"张无忌"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("))")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\tSystem.out.println"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"查询ID为"')]),t._v("+ userId + "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"的用户信息成功"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("else "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\tSystem.out.println"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"查询ID为"')]),t._v("+ userId + "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"的用户信息成功"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("strong",[t._v("具体DocumentDAO类：真实角色")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("\tpublic class DocumentDAO implements AbstractDocumentDAO "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\n\t\tpublic Boolean deleteDocumentById"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("String documentId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tif"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("documentId.equalsIgnoreCase"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"D001"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("))")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\tSystem.out.println"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"删除ID为"')]),t._v(" + documentId + "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"的文档信息成功!"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("else"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\tSystem.out.println"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"删除ID为"')]),t._v(" + documentId + "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"的文档信息失败!"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("strong",[t._v("自定义请求处理程序类")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("\tpublic class DAOLogHandler implements InvocationHandler "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\n\t\tprivate Calendar calendar"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\tprivate Object object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\n\t\tpublic DAOLogHandler"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t// TODO Auto-generated constructor stub\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t\n\t\t//自定义有参构造函数，用于注入一个需要提供代理的真实主题对象\n\t\tpublic DAOLogHandler"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Object object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tthis.object "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t\n\t\t//实现invoke"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("方法，调用在真实主题类中定义的方法\n\t\tpublic Object invoke"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Object obj, Method method, Object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" throws Throwable "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tbeforeInvoke"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\tObject result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" method.invoke"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj, args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t//转发调用\n\t\t\tafterInoke"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" result"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t\n\t\t//记录方法调用时间\n\t\tpublic void beforeInvoke"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tcalendar "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" new GregorianCalendar"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\tint hour "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" calendar.get"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Calendar.HOUR_OF_DAY"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\tint minute "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" calendar.get"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Calendar.MINUTE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\tint second "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" calendar.get"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Calendar.SECOND"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\tString "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("time")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" hour + "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('":"')]),t._v(" + minute + "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('":"')]),t._v(" + second"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\tSystem.out.println"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"调用时间："')]),t._v("+time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t\n\t\tpublic void afterInoke"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tSystem.out.println"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"方法调用结束！"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("strong",[t._v("客户端实现")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("\tpublic class Client "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tpublic static void main"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("String"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tInvocationHandler handler "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" null"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\n\t\t\tAbstractUserDAO userDAO "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" new UserDAO"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\thandler "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" new DAOLogHandler"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("userDAO"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\tAbstractUserDAO proxy "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" null"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t//动态创建代理对象，用于代理一个AbstractUserDAO类型的真实主题对象\n\t\t\tproxy "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("AbstractUserDAO"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" Proxy.newProxyInstance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t\t\t\t\t\tAbstractUserDAO.class.getClassLoader"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(", \n\t\t\t\t\t\tnew Class"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("AbstractUserDAO.class"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n\t\t\t\t\t\thandler"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\n\t\t\t//调用代理对象的业务方法\n\t\t\tproxy.findUserById"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"张无忌"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \t\n\t\t\t\n\t\t\tSystem.out.println"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"----------------------"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\n\t\t\tAbstractDocumentDAO docDAO "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" new DocumentDAO"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\thandler "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" new DAOLogHandler"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("docDAO"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\tAbstractDocumentDAO proxy_new "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" null"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t//动态创建代理对象，用于代理一个AbstractDocumentDAO类型的真实主题对象\n\t\t\tproxy_new "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("AbstractDocumentDAO"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" Proxy.newProxyInstance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t\t\t\t\tAbstractDocumentDAO.class.getClassLoader"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(",\n\t\t\t\t\tnew Class"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("AbstractDocumentDAO.class"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n\t\t\t\t\thandler"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t//调用代理对象的业务方法\n\t\t\tproxy_new.deleteDocumentById"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"D002"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("注：JDK中提供的动态代理只能代理一个或者多个接口，如果需要动态代理具体类或抽象类，可以使用CGLibe(Code Generation Library)等工具。CGLib是一个功能较为强大，性能和质量较好的代码生成包，许多AOP框架中得到很广泛应用。")])]),t._v(" "),s("h2",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结","aria-hidden":"true"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),s("p",[t._v("代理模式是常用的结构型设计模式之一，它为对象的间接访问提供了一个解决方案，可以对对象的间接访问提供一个解决方案，可以对对象的访问进行控制。代理模式类型较多，其中远程代理，虚拟代理，保护代理等在软件开发中应用非常广泛。在JavaRMI，EJB，Web Service，Spring AOP等技术和框架中都使用了代理模式")]),t._v(" "),s("h2",{attrs:{id:"优点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#优点","aria-hidden":"true"}},[t._v("#")]),t._v(" 优点")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("代理模式能够协调调用者和被调用者，在一定程度上降低了系统的耦合度，满足迪米特法则")])]),t._v(" "),s("li",[s("p",[t._v("客户端可以针对抽象主题角色进行编程，增加和更换代理类无须修改源代码，符合开闭原则，系统具有较好的灵活性和可扩展性")])]),t._v(" "),s("li",[s("p",[t._v("远程代理为位于两个不同地址空间对象的访问提供了一种实现机制，可以将一些消耗资源较多的对象和操作移至性能更好的计算机上，提供系统的整体运行效率")])]),t._v(" "),s("li",[s("p",[t._v("虚拟代理通过一个消耗资源较少的对象来代表一个消耗资源较多的对象，可以在一定程度上节省系统的运行开销")])]),t._v(" "),s("li",[s("p",[t._v("保护代理可以控制对一个对象的访问权限，为不同用户提供不同级别的使用权限")])])]),t._v(" "),s("h2",{attrs:{id:"缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#缺点","aria-hidden":"true"}},[t._v("#")]),t._v(" 缺点")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("由于客户端和真实主题之间增加了代理对象，因此有些类型的代理模式可能会造成请求的处理速度变慢，例如保护代理")])]),t._v(" "),s("li",[s("p",[t._v("实现代理模式需要额外的工作，有些代理模式的实现非常复杂，例如远程代理")])])]),t._v(" "),s("h2",{attrs:{id:"适用场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#适用场景","aria-hidden":"true"}},[t._v("#")]),t._v(" 适用场景")]),t._v(" "),s("p",[t._v("代理模式的类型较多，不同类型的代理模式有不同的优缺点，它们应用于不同的场合")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("当客户端对象需要访问远程主机中的对象时，可以使用远程代理")])]),t._v(" "),s("li",[s("p",[t._v("当需要用一个消耗资源较少的对象来代表一个消耗资源较多的对象，从而降低系统开销，缩短运行时间时，可以使用虚拟代理，例如一个对象需要很长时间才能完成加载时。")])]),t._v(" "),s("li",[s("p",[t._v("当需要控制对一个对象的访问，为不同用户提供不同级别的访问权限时，可以使用保护代理")])]),t._v(" "),s("li",[s("p",[t._v("当需要为某一个被频繁访问的操作结果提供一个临时存储空间，以供多个客户端共享访问这些结果时，可以使用缓冲代理，通过缓冲代理，系统无须在客户端每一次访问时都重新执行操作，只需直接从临时缓冲区获取操作结果即可。")])]),t._v(" "),s("li",[s("p",[t._v("当需要为一个对象的访问(引用)提供一些额外的操作时，可以使用智能引用代理")])])])])},[],!1,null,null,null);a.default=e.exports}}]);